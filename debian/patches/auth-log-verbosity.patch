From 283322f493ee7dc75511f6cf9e9b88e536de0874 Mon Sep 17 00:00:00 2001
From: Colin Watson <cjwatson@debian.org>
Date: Sun, 9 Feb 2014 16:10:02 +0000
Subject: Quieten logs when multiple from= restrictions are used

Bug-Debian: http://bugs.debian.org/630606
Forwarded: no
Last-Update: 2013-09-14

Patch-Name: auth-log-verbosity.patch
---
 auth-options.c | 35 ++++++++++++++++++++++++++---------
 auth-options.h |  1 +
 auth2-pubkey.c |  3 +++
 4 files changed, 32 insertions(+), 9 deletions(-)

Index: openssh/auth-options.c
===================================================================
--- openssh.orig/auth-options.c
+++ openssh/auth-options.c
@@ -39,6 +39,17 @@
 #include "ssh2.h"
 #include "auth-options.h"
 
+/* Throttle log messages. */
+int logged_from_hostip = 0;
+int logged_cert_hostip = 0;
+
+void
+auth_start_parse_options(void)
+{
+	logged_from_hostip = 0;
+	logged_cert_hostip = 0;
+}
+
 /*
  * Match flag 'opt' in *optsp, and if allow_negate is set then also match
  * 'no-opt'. Returns -1 if option not matched, 1 if option matches or 0
Index: openssh/auth-options.h
===================================================================
--- openssh.orig/auth-options.h
+++ openssh/auth-options.h
@@ -67,6 +67,8 @@ struct sshauthopt {
 	char *required_from_host_keys;
 };
 
+void auth_start_parse_options(void);
+
 struct sshauthopt *sshauthopt_new(void);
 struct sshauthopt *sshauthopt_new_with_keys_defaults(void);
 void sshauthopt_free(struct sshauthopt *opts);
Index: openssh/auth2-pubkey.c
===================================================================
--- openssh.orig/auth2-pubkey.c
+++ openssh/auth2-pubkey.c
@@ -374,6 +374,7 @@ match_principals_file(struct ssh *ssh, s
 		restore_uid();
 		return 0;
 	}
+	auth_start_parse_options();
 	success = process_principals(ssh, f, file, cert, authoptsp);
 	fclose(f);
 	restore_uid();
@@ -704,6 +705,7 @@ check_authkeys_file(struct ssh *ssh, str
 	if (authoptsp != NULL)
 		*authoptsp = NULL;
 
+	auth_start_parse_options();
 	while (getline(&line, &linesize, f) != -1) {
 		linenum++;
 		/* Always consume entire file */
@@ -778,6 +780,7 @@ user_cert_trusted_ca(struct ssh *ssh, st
 	    use_authorized_principals ? NULL : pw->pw_name, &reason) != 0)
 		goto fail_reason;
 
+	auth_start_parse_options();
 	/* Check authority from options in key and from principals file/cmd */
 	if ((cert_opts = sshauthopt_from_cert(key)) == NULL) {
 		reason = "Invalid certificate options";
